name: Run Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test-python-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [userservice, contacts]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Determine service path
      id: service-path
      run: |
        case "${{ matrix.service }}" in
          userservice)
            echo "path=src/accounts/userservice" >> $GITHUB_OUTPUT
            ;;
          contacts)
            echo "path=src/accounts/contacts" >> $GITHUB_OUTPUT
            ;;
        esac
    
    - name: Install dependencies
      run: |
        cd ${{ steps.service-path.outputs.path }}
        pip install -r requirements.txt
    
    - name: Run Python tests
      run: |
        cd ${{ steps.service-path.outputs.path }}
        python -m pytest tests/ -v
      env:
        # Set environment variables that tests might need
        PYTHONPATH: .

  test-java-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ledgerwriter, balancereader, transactionhistory]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Determine service path
      id: service-path
      run: |
        case "${{ matrix.service }}" in
          ledgerwriter)
            echo "path=src/ledger/ledgerwriter" >> $GITHUB_OUTPUT
            ;;
          balancereader)
            echo "path=src/ledger/balancereader" >> $GITHUB_OUTPUT
            ;;
          transactionhistory)
            echo "path=src/ledger/transactionhistory" >> $GITHUB_OUTPUT
            ;;
        esac
    
    - name: Run Java tests
      run: |
        cd ${{ steps.service-path.outputs.path }}
        mvn test

  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install Python linting tools
      run: |
        pip install flake8 black isort
    
    - name: Lint Python code
      run: |
        # Check Python formatting and style
        find src/ -name "*.py" -path "*/tests/*" -o -name "*.py" -path "*/src/*" | head -20 | while read file; do
          echo "Checking $file"
          flake8 "$file" --max-line-length=120 --ignore=E203,W503 || true
        done
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Run Java checkstyle
      run: |
        for service in ledgerwriter balancereader transactionhistory; do
          cd src/ledger/$service
          if [ -f checkstyle.xml ]; then
            echo "Running checkstyle for $service"
            mvn checkstyle:check || true
          fi
          cd - > /dev/null
        done

  validate-manifests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Install tools
      run: |
        # Install kustomize
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        sudo mv kustomize /usr/local/bin/
        
        # Install kubeval for manifest validation
        wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
        tar xf kubeval-linux-amd64.tar.gz
        sudo mv kubeval /usr/local/bin/
    
    - name: Validate Kubernetes manifests
      run: |
        echo "Validating base manifests..."
        kustomize build manifests/base | kubeval
        
        echo "Validating development overlay..."
        kustomize build manifests/overlays/development | kubeval || true
        
        echo "Validating example manifests..."
        kustomize build manifests/examples/minimal | kubeval || true