name: Build and Push Images

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, userservice, contacts, ledgerwriter, balancereader, transactionhistory, loadgenerator]
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Determine service path
      id: service-path
      run: |
        case "${{ matrix.service }}" in
          frontend)
            echo "path=src/frontend" >> $GITHUB_OUTPUT
            ;;
          userservice)
            echo "path=src/accounts/userservice" >> $GITHUB_OUTPUT
            ;;
          contacts)
            echo "path=src/accounts/contacts" >> $GITHUB_OUTPUT
            ;;
          ledgerwriter)
            echo "path=src/ledger/ledgerwriter" >> $GITHUB_OUTPUT
            ;;
          balancereader)
            echo "path=src/ledger/balancereader" >> $GITHUB_OUTPUT
            ;;
          transactionhistory)
            echo "path=src/ledger/transactionhistory" >> $GITHUB_OUTPUT
            ;;
          loadgenerator)
            echo "path=src/loadgenerator" >> $GITHUB_OUTPUT
            ;;
        esac
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ${{ steps.service-path.outputs.path }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max